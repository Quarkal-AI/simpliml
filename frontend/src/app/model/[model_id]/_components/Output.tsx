import Image from "next/image"

import styles from "@/styles/Explore/Explore.module.css"

import Moreinformation from "../../../../../public/more_information.svg"
import Share from "../../../../../public/share.svg"
import Outputloader from "./Outputloader"

interface promptResponsed {
	data: string
	responseTime: string
	coldTime: string
	promptToken: string
	completionToken: string
	totalToken: string
}

interface MyComponentProps {
	loading: boolean
	data?: promptResponsed
	promptResponseState: promptResponsed
}

export default function Output({
	loading,
	data,
	promptResponseState,
}: MyComponentProps) {
	function autoScrollToBottom() {
		if (typeof window === "object") {
			var textarea = document.getElementById("myTextArea")
			if (!textarea) return
			textarea.scrollTop = textarea.scrollHeight
		}
	}

	autoScrollToBottom()

	return (
		<>
			<div
				className={`w-1/2 border border-white p-4 ${styles.outputContainer}`}
			>
				<div className="flex justify-between items-center">
					<div className={`${styles.outputTextStyle}`}>Output</div>
					<div className="flex space-x-2">
						<div
							className={`flex px-4 space-x-2 items-center ${styles.shareButtonStyle} justify-center`}
						>
							<div>
								<Image
									src={Share.src}
									width={"100"}
									height={"100"}
									alt="share"
									className="w-full"
								/>
							</div>
							<div>Share</div>
						</div>
						<div
							className={`flex px-4 space-x-2 items-center ${styles.shareButtonStyle} justify-center`}
						>
							<div>
								<Image
									src={Share.src}
									width={"100"}
									height={"100"}
									alt="share"
									className="w-full"
								/>
							</div>
							<div>Report</div>
						</div>
					</div>
				</div>
				{!loading ? (
					<div>
						<div className={`${styles.promptOutputContainer} mt-4`}>
							<div>
								<textarea
									id="myTextArea"
									rows={10}
									readOnly
									value={promptResponseState?.data}
									className={`${styles.promptOutputStyle}`}
								/>
							</div>
						</div>
						<div
							className={`mt-4 text-gray-400 ${styles.styleForColdTimeAndResponseTime}`}
						>
							{promptResponseState?.coldTime && (
								<div className="mb-4">
									<p className="mb-1">
										Cold start time
										<span className={`${styles.textDecorationForTime}`}>
											({promptResponseState?.coldTime})
										</span>
									</p>
									<p>
										Response Time
										<span className={`${styles.textDecorationForTime}`}>
											({promptResponseState?.responseTime})
										</span>
									</p>
								</div>
							)}
							{promptResponseState?.promptToken && (
								<div>
									<p className="mb-1">
										Input Token
										<span className={`${styles.textDecorationForTime}`}>
											({promptResponseState?.promptToken})
										</span>
									</p>
									<p>
										Output Token
										<span className={`${styles.textDecorationForTime}`}>
											({promptResponseState?.completionToken})
										</span>
									</p>
								</div>
							)}
						</div>
					</div>
				) : (
					<Outputloader />
				)}
				<div className="mt-16">{/* &gt;_Show logs */}</div>
				<div
					className={`flex items-center space-x-8 ${styles.moreInformationWholeContainer}`}
				>
					<div className={`${styles.moreInformationContainer}`}>
						<Image
							src={Moreinformation.src}
							width={"100"}
							height={"100"}
							alt="more_information"
							className={`${styles.moreInformationImage}`}
						/>
					</div>
					<div style={{ fontSize: "10px" }} className="text-align-justify">
						The responses generated by model are based on patterns and
						information present in the data it was trained on. While it strives
						to provide helpful and accurate information, it may not always
						reflect the most up-to-date or entirely precise details. Please use
						the information from this chat as a starting point and verify
						critical details independently.
					</div>
				</div>
			</div>
		</>
	)
}
